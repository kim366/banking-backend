service: banking
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  environment: ${file(env.yml):${self:custom.stage}}
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${file(env.yml):${self:custom.stage}.USERS_TABLE}"

plugins:
  - serverless-plugin-typescript
  - serverless-offline

functions:
  login:
    handler: auth.login
    events:
      - http:
          path: login
          method: post
          cors: true
  
  createUser:
    handler: auth.create
  
  getAccounts:
    handler: banking.accounts
    events:
      - http:
          path: accounts
          method: get
          cors: true

resources:
  Resources:
    customersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(env.yml):${self:custom.stage}.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

custom:
  stage: ${opt:stage, self:provider.stage}